{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\OneDrive\\\\Desktop\\\\CREDORE\\\\Credore\\\\my-app\\\\src\\\\emailinput.tsx\";\nimport \"./styles.css\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class EmailInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = e => {\n      this.setState({\n        value: e.currentTarget.value,\n        error: null\n      });\n    };\n    this.state = {\n      value: \"\",\n      emails: [],\n      error: null\n    };\n  }\n  handleKeyDown(e) {\n    if ([\"Tab\", \"Enter\", \",\"].includes(e.key)) {\n      e.preventDefault();\n      let email = this.state.value.trim();\n      if (email && this.isValid(email)) {\n        this.setState({\n          emails: [...this.state.emails, email],\n          value: \"\"\n        });\n      }\n    }\n  }\n  handleDelete(toBeRemoved) {\n    // TODO Issue: if two similar emails are posted, only one can be deleted\n    this.setState({\n      emails: this.state.emails.filter(email => email !== toBeRemoved)\n    });\n  }\n  isValid(email) {\n    let error = null;\n    if (!this.isEmail(email)) {\n      error = `${email} is not a valid email address.`;\n    }\n    if (this.isInList(email)) {\n      error = `${email} has already been added.`;\n    }\n    if (error) {\n      this.setState({\n        error\n      });\n      return false;\n    }\n    return true;\n  }\n  isEmail(email) {\n    return /[\\w\\d\\.-]+@[\\w\\d\\.-]+\\.[\\w\\d\\.-]+/.test(email);\n  }\n  handlePaste(evt) {\n    evt.preventDefault();\n    let paste = evt.clipboardData.getData(\"text\");\n    let emails = paste.match(/[\\w\\d\\.-]+@[\\w\\d\\.-]+\\.[\\w\\d\\.-]+/g);\n    if (emails) {\n      var toBeAdded = emails.filter(email => !this.isInList(email));\n      this.setState({\n        emails: [...this.state.emails, ...toBeAdded]\n      });\n    }\n  }\n  isInList(email) {\n    return this.state.emails.includes(email);\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [this.state.emails.map(email => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tag-item\",\n        children: [email, /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"button\",\n          onClick: () => this.handleDelete(email),\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this)]\n      }, email, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input \" + (this.state.error && \" has-error\"),\n        value: this.state.value,\n        placeholder: \"Type or paste email addresses\",\n        onChange: e => this.handleChange(e),\n        onKeyDown: e => this.handleKeyDown(e),\n        onPaste: e => this.handlePaste(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), this.state.error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: this.state.error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 30\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this);\n  }\n}","map":{"version":3,"names":["React","EmailInput","Component","constructor","props","handleChange","e","setState","value","currentTarget","error","state","emails","handleKeyDown","includes","key","preventDefault","email","trim","isValid","handleDelete","toBeRemoved","filter","isEmail","isInList","test","handlePaste","evt","paste","clipboardData","getData","match","toBeAdded","render","map"],"sources":["C:/Users/hp/OneDrive/Desktop/CREDORE/Credore/my-app/src/emailinput.tsx"],"sourcesContent":["import \"./styles.css\";\nimport React from \"react\";\n\ninterface IState {\n  value: string;\n  emails: Array<string>;\n  error?: string | null;\n  items?: Array<string>;\n}\n\nexport default class EmailInput extends React.Component<any, IState> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      value: \"\",\n      emails: [],\n      error: null\n    };\n  }\n\n  handleChange: React.ChangeEventHandler<HTMLInputElement> = (e) => {\n    this.setState({\n      value: e.currentTarget.value,\n      error: null\n    });\n  };\n\n  handleKeyDown(e: React.KeyboardEvent<HTMLInputElement>) {\n    if ([\"Tab\", \"Enter\", \",\"].includes(e.key)) {\n      e.preventDefault();\n      let email: string = this.state.value.trim();\n      if (email && this.isValid(email)) {\n        this.setState({\n          emails: [...this.state.emails, email],\n          value: \"\"\n        });\n      }\n    }\n  }\n\n  handleDelete(toBeRemoved: string) {\n    // TODO Issue: if two similar emails are posted, only one can be deleted\n    this.setState({\n      emails: this.state.emails.filter((email) => email !== toBeRemoved)\n    });\n  }\n\n  isValid(email: string): boolean {\n    let error = null;\n    if (!this.isEmail(email)) {\n      error = `${email} is not a valid email address.`;\n    }\n    if (this.isInList(email)) {\n      error = `${email} has already been added.`;\n    }\n    if (error) {\n      this.setState({ error });\n      return false;\n    }\n    return true;\n  }\n\n  isEmail(email: string) {\n    return /[\\w\\d\\.-]+@[\\w\\d\\.-]+\\.[\\w\\d\\.-]+/.test(email);\n  }\n\n  handlePaste(evt: React.ClipboardEvent<HTMLInputElement>) {\n    evt.preventDefault();\n\n    let paste: string = evt.clipboardData.getData(\"text\");\n    let emails: string[] | null = paste.match(\n      /[\\w\\d\\.-]+@[\\w\\d\\.-]+\\.[\\w\\d\\.-]+/g\n    );\n\n    if (emails) {\n      var toBeAdded = emails.filter((email) => !this.isInList(email));\n\n      this.setState({\n        emails: [...this.state.emails, ...toBeAdded]\n      });\n    }\n  }\n\n  isInList(email: string) {\n    return this.state.emails.includes(email);\n  }\n\n  public render() {\n    return (\n      <React.Fragment>\n        {this.state.emails.map((email: string) => (\n          <div className=\"tag-item\" key={email}>\n            {email}\n            <button\n              type=\"button\"\n              className=\"button\"\n              onClick={() => this.handleDelete(email)}\n            >\n              &times;\n            </button>\n          </div>\n        ))}\n        <input\n          className={\"input \" + (this.state.error && \" has-error\")}\n          value={this.state.value}\n          placeholder=\"Type or paste email addresses\"\n          onChange={(e) => this.handleChange(e)}\n          onKeyDown={(e) => this.handleKeyDown(e)}\n          onPaste={(e) => this.handlePaste(e)}\n        />\n        {this.state.error && <p className=\"error\">{this.state.error}</p>}\n      </React.Fragment>\n    );\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}